import{c4 as P,c5 as C,r as c,j as e,bH as T,ad as S,T as o,a1 as B,B as M,f as _,e as L,u as k,bg as N,ao as R,i7 as U,a0 as A,Q as F,aa as j,d0 as m,i8 as O}from"./index-Eksrs3uK.js";import{C as y}from"./Code-HuerkG4_.js";import{R as b}from"./Radio-HudVgwMW.js";import{R as w}from"./RadioGroup-zpRjMzXK.js";import{T as v}from"./Toggle-AbahDP9J.js";const D=l=>{const{refetch:x}=P(),{mutateAsync:p}=C(!0),[h,r]=c.useState(""),[f,n]=c.useState(""),[t,d]=c.useState(""),[g,u]=c.useState(!1),[s,i]=c.useState(!1);c.useEffect(()=>{u(!0),x().then(({data:a})=>a??Promise.reject()).then(a=>{u(!1),r(JSON.stringify(a,null,2))}).catch(()=>{n("Unable to load user preferences")})},[]);const E=()=>{try{const a=JSON.parse(h);i(!0),d(""),n(""),p(a).then(()=>{d("Preferences updated successfully"),i(!1)}).catch(()=>{n("Unable to set preferences")})}catch{n("Invalid JSON")}};return e.jsxs(T,{fullWidth:!0,maxWidth:"sm",onClose:l.onClose,open:l.open,title:"Edit Preferences",children:[f&&e.jsx(S,{spacingBottom:8,text:f,variant:"error"}),t&&e.jsx(S,{spacingBottom:8,text:t,variant:"success"}),e.jsxs(o,{children:["Update user preferences tied to Cloud Manager. See the"," ",e.jsx(B,{to:"https://developers.linode.com/api/v4/profile-preferences",children:"Linode API documentation"})," ","for more information about user preferences."]}),g&&e.jsx(o,{children:"Loading..."}),e.jsx("div",{children:e.jsx("textarea",{style:{fontFamily:'"Ubuntu Mono", monospace"',height:300,marginTop:16,width:"100%"},onChange:a=>r(a.target.value),value:h})}),e.jsx(M,{display:"flex",justifyContent:"flex-end",children:e.jsx(_,{buttonType:"primary",loading:s,onClick:E,sx:{marginTop:1},children:"Save"})})]})},$=()=>{const l=L(),x=k(),p=!!N(l.search,"preferenceEditor"),h=()=>{const s=new URLSearchParams(l.search);s.delete("preferenceEditor"),x.replace({search:s.toString()})},{data:r}=R(),{isLoading:f,mutateAsync:n}=U(),{data:t}=P(),{mutateAsync:d}=C(),g=(t==null?void 0:t.type_to_confirm)===void 0||(t==null?void 0:t.type_to_confirm)===!0,u=(r==null?void 0:r.email_notifications)===!0;return e.jsxs(A,{spacing:2,children:[e.jsx(F,{segment:"My Settings"}),e.jsxs(j,{children:[e.jsx(o,{marginBottom:1,variant:"h2",children:"Notifications"}),e.jsx(m,{control:e.jsx(v,{onChange:(s,i)=>n({email_notifications:i}),checked:u}),label:`Email alerts for account activity are ${u?"enabled":"disabled"}`,disabled:f})]}),e.jsxs(j,{children:[e.jsx(o,{marginBottom:1,variant:"h2",children:"Theme"}),e.jsxs(o,{variant:"body1",children:["You may toggle your theme with the keyboard shortcut"," ",J,"."]}),e.jsxs(w,{onChange:s=>d({theme:s.target.value}),row:!0,style:{marginBottom:0},value:(t==null?void 0:t.theme)??"system",children:[e.jsx(m,{control:e.jsx(b,{}),label:"Light",value:"light"}),e.jsx(m,{control:e.jsx(b,{}),label:"Dark",value:"dark"}),e.jsx(m,{control:e.jsx(b,{}),label:"System",value:"system"})]})]}),e.jsxs(j,{children:[e.jsx(o,{marginBottom:1,variant:"h2",children:"Type-to-Confirm"}),e.jsx(o,{marginBottom:1,variant:"body1",children:"For some products and services, the type-to-confirm setting requires entering the label before deletion."}),e.jsx(m,{control:e.jsx(v,{onChange:(s,i)=>d({type_to_confirm:i}),checked:g}),label:`Type-to-confirm is ${g?"enabled":"disabled"}`})]}),e.jsx(D,{onClose:h,open:p})]})},J=e.jsxs(e.Fragment,{children:[e.jsx(y,{children:O?"Ctrl":"Alt"})," + ",e.jsx(y,{children:"Shift"})," +"," ",e.jsx(y,{children:"D"})]});export{$ as ProfileSettings};
