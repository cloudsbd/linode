import{r as p,ba as g,ao as D,j as e,V as v,aq as f,W as o,kj as $,Z as w,ap as y,cp as z}from"./index-Eksrs3uK.js";import{S as P}from"./StatusIcon-RuV8PvAV.js";import{T as R,a}from"./TableRow-phXfWUGW.js";const S={active:"active",degraded:"inactive",failed:"error",provisioning:"other",restoring:"other",resuming:"other",suspended:"error",suspending:"other"},q={mongodb:"MongoDB",mysql:"MySQL",postgresql:"PostgreSQL",redis:"Redis"},C=({database:h})=>{const{cluster_size:d,created:s,engine:l,id:t,label:c,region:u,status:m,version:x}=h,{data:r}=g(),{data:i}=D(),n=r==null?void 0:r.find(b=>b.id===u),j=d===1?"Primary":e.jsxs(e.Fragment,{children:[`Primary +${d-1}`,e.jsx(z,{inTable:!0,label:"HA",outlineColor:"green",size:"small",variant:"outlined"})]});return e.jsxs(R,{ariaLabel:`Database ${c}`,"data-qa-database-cluster-id":t,children:[e.jsx(a,{children:e.jsx(v,{to:`/databases/${l}/${t}`,children:c})}),e.jsxs(a,{statusCell:!0,children:[e.jsx(P,{status:S[m]}),f(m)]}),e.jsx(o,{smDown:!0,children:e.jsx(a,{children:j})}),e.jsx(a,{children:`${q[l]} v${x}`}),e.jsx(o,{mdDown:!0,children:e.jsx(a,{children:(n==null?void 0:n.label)??u})}),e.jsx(o,{lgDown:!0,children:e.jsx(a,{children:$(3,s)?w(s).toRelative():y(s,{timezone:i==null?void 0:i.timezone})})})]},`database-row-${t}`)};p.memo(C);export{C as D,S as a,q as d};
