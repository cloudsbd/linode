import{s as d,T as p,G as f,aW as y,j as e,aa as g,a1 as j,lP as k,C as v,E as C,cx as x,lQ as T,ak as L,ad as S,bB as m,ag as h,r as w,lR as B,f as W,af as F}from"./index-Eksrs3uK.js";import{u as P}from"./formik.esm-Kap5lsIh.js";const R=d(p,{label:"StyledHelperText"})(({theme:t})=>({lineHeight:1.5,paddingTop:t.spacing()})),A=d("div",{label:"StyledTextFieldWrapper"})(()=>({alignItems:"flex-start",display:"flex",flexFlow:"row wrap",justifyContent:"space-between"})),E=d(f,{label:"StyledCertWrapper"})(({theme:t})=>({paddingRight:t.spacing(2),[t.breakpoints.down("md")]:{padding:0}})),I=d(f,{label:"StyledKeyWrapper"})(({theme:t})=>({paddingLeft:t.spacing(2),[t.breakpoints.down("md")]:{padding:0}})),K=t=>{const{bucketName:s,clusterId:n}=t,r=y();return e.jsxs(g,{sx:{padding:r.spacing(3)},children:[e.jsx(p,{variant:"h2",children:"SSL/TLS Certificate"}),e.jsxs(R,{children:["Object Storage buckets are automatically served with a default TLS certificate that is valid for subdomains of linodeobjects.com. You can upload a custom certificate that will be used for the TLS portion of the HTTPS request instead. For more information, please see our guide on using"," ",e.jsx(j,{to:"https://www.linode.com/docs/platform/object-storage/enable-ssl-for-object-storage/",children:"custom certificates for Object Storage buckets"}),"."]}),e.jsx(N,{bucketName:s,clusterId:n})]})},N=t=>{const{bucketName:s,clusterId:n}=t,{data:r,error:a,isLoading:l}=k(n,s),o=!!(r!=null&&r.ssl);return l?e.jsx(v,{}):a?e.jsx(C,{errorText:a==null?void 0:a[0].reason}):o?e.jsx(H,{...t}):e.jsx(_,{...t})},_=t=>{const{bucketName:s,clusterId:n}=t,{enqueueSnackbar:r}=x(),{error:a,isLoading:l,mutateAsync:o}=T(n,s),i=P({initialValues:{certificate:"",private_key:""},async onSubmit(u){await o(u),r(`Successfully added certificate to bucket ${s}`,{variant:"success"})}}),c=L(["certificate","private_key"],a);return e.jsxs("form",{onSubmit:i.handleSubmit,children:[c.none&&e.jsx(S,{spacingBottom:0,spacingTop:8,text:c.none,variant:"error"}),e.jsxs(A,{children:[e.jsx(E,{md:6,xs:12,children:e.jsx(m,{"data-testid":"ssl-cert-input",errorText:c.certificate,fullWidth:!1,label:"Certificate",multiline:!0,name:"certificate",onChange:i.handleChange,rows:"3",sx:{"& > div":{minWidth:"100%"}},value:i.values.certificate})}),e.jsx(I,{md:6,xs:12,children:e.jsx(m,{"data-testid":"ssl-cert-input",errorText:c.private_key,fullWidth:!0,label:"Private Key",multiline:!0,name:"private_key",onChange:i.handleChange,rows:"3",sx:{"& > div":{minWidth:"100%"}},value:i.values.private_key})})]}),e.jsx(f,{children:e.jsx(h,{primaryButtonProps:{label:"Upload Certificate",loading:l,type:"submit"}})})]})},H=t=>{const{bucketName:s,clusterId:n}=t,[r,a]=w.useState(!1),{enqueueSnackbar:l}=x(),{error:o,isLoading:i,mutateAsync:c}=B(n,s),u=async()=>{await c(),a(!1),l(`Successfully removed certificate from bucket ${s}`,{variant:"success"})},b=e.jsx(h,{primaryButtonProps:{label:"Remove certificate",loading:i,onClick:u},secondaryButtonProps:{disabled:i,label:"Cancel",onClick:()=>a(!1)}});return e.jsxs(e.Fragment,{children:[e.jsxs(S,{spacingTop:8,variant:"info",children:["A TLS certificate has already been uploaded for this Bucket. To upload a new certificate, remove the current certificate."," "]}),e.jsx(W,{buttonType:"primary",onClick:()=>a(!0),children:"Remove Certificate"}),e.jsx(F,{actions:b,error:o==null?void 0:o[0].reason,onClose:()=>a(!1),open:r,title:"Remove TLS certificate",children:e.jsx(p,{children:"Are you sure you want to remove all certificates from this Bucket?"})})]})};export{K as BucketSSL,N as SSLBody};
