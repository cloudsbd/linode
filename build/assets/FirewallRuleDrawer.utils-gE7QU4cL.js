import{jX as E,kr as A,ks as C}from"./index-Eksrs3uK.js";import{i as m}from"./ipaddr-jlottelM.js";import{u as b}from"./uniq-xa8_MmzW.js";import{p as g,a as R,b as L,d as O,e as w,f as x,g as k}from"./shared-QcuPM2Px.js";import{s as I}from"./ipUtils-P4y3JNCT.js";import{s as _}from"./sortBy-avzW26A0.js";const u={22:{label:"SSH (22)",value:"22"},53:{label:"DNS (53)",value:"53"},80:{label:"HTTP (80)",value:"80"},443:{label:"HTTPS (443)",value:"443"},3306:{label:"MySQL (3306)",value:"3306"},ALL:{label:"Allow All",value:"1-65535"},CUSTOM:{label:"Custom",value:"CUSTOM"}},z=_(E("label"),Object.values(u)),B=t=>{var p,c,P,v,f;const{field:r,reason:s}=t;if(!r)return null;const n=(p=r.match(/inbound|outbound/))==null?void 0:p[0],e=(c=r.match(/\d+/))==null?void 0:c[0],a=(P=r.match(/ports|protocol|addresses/))==null?void 0:P[0],o=(v=r.match(/ipv4|ipv6/))==null?void 0:v[0],i=(f=r.match(/(ipv4|ipv6)\[(\d+)\]/))==null?void 0:f[2];if(!n||!e||!a)return null;const l={category:n,formField:a,idx:+e,reason:s};return o&&i&&(l.ip={idx:+i,type:o}),l},G=t=>{try{return t.split(",").sort(h).map(s=>s.trim()).join(", ")}catch{return t}},h=(t,r)=>{const s=Number(d(t)),n=Number(d(r));return s>n?1:s<n?-1:0},d=t=>t.match(/-/)?t.split("-")[0]:t,S="Must be a valid IPv4 or IPv6 range.",Q=(t,r)=>{switch(t){case"all":return k;case"allIPv4":return{ipv4:[x]};case"allIPv6":return{ipv6:[w]};default:return F(r)}},W=(t,r)=>t.map(({address:s})=>{if(!(r!=null&&r.allowEmptyAddress)&&!s)return{address:s,error:"Please enter an IP address."};try{m.parseCIDR(s)}catch{if(s)return{address:s,error:S}}return{address:s}}),F=t=>t.reduce((r,{address:s})=>{const[n]=s.split("/");try{const a=m.parse(n).kind();r[a]||(r[a]=[]),r[a].push(s)}catch{}return r},{}),j={action:"ACCEPT",addresses:"",description:"",label:"",ports:"",protocol:"",type:""},X=t=>t?{action:t.action,addresses:q(t.addresses),description:(t==null?void 0:t.description)||"",label:(t==null?void 0:t.label)||"",ports:N(t.ports)[1],protocol:t.protocol,type:g(t)||""}:j,q=t=>R(t)?"all":L(t)?"allIPv4":O(t)?"allIPv6":"ip/netmask",$=t=>{var a;const{addresses:r}=t,s=((r==null?void 0:r.ipv4)??[]).map(I),n=((r==null?void 0:r.ipv6)??[]).map(I),e=[...s,...n];return(a=t.errors)==null||a.forEach(o=>{var c;const{formField:i,ip:l}=o;if(i!=="addresses"||!l)return;const p=l.type==="ipv4"?l.idx:((c=r==null?void 0:r.ipv4)==null?void 0:c.length)??0+l.idx;e[p].error=S}),e},J=(t,r)=>{if(t.findIndex(e=>e.value==="ALL")>-1)return"1-65535";const s=t.map(e=>e.value).filter(e=>e!=="CUSTOM"),n=(r??"").split(",").map(e=>e.trim()).filter(Boolean);return b([...s,...n]).sort(h).join(", ")},N=t=>{if(!t)return[[],""];if(t.match(/1-65535/))return[[u.ALL],""];const r=t.split(",").map(e=>e.trim()),s=[],n=[];return r.forEach(e=>{const a=u[e];a?s.push(a):n.push(e)}),n.length>0&&s.push({label:"Custom",value:"CUSTOM"}),[b(s),n.join(", ")]},K=({addresses:t,description:r,label:s,ports:n,protocol:e})=>{const a={};return s?s.length<3||s.length>32?a.label="Label must be 3-32 characters.":/^[^a-z]/i.test(s)?a.label="Label must begin with a letter.":/[^0-9a-z._-]+/i.test(s)&&(a.label="Label must include only ASCII letters, numbers, underscores, periods, and dashes."):a.label="Label is required.",r&&r.length>100&&(a.description="Description must be 1-100 characters."),e||(a.protocol="Protocol is required."),t||(a.addresses="Sources is a required field."),!n&&e!=="ICMP"&&e!=="IPENCAP"&&(a.ports="Ports is a required field."),(e==="ICMP"||e==="IPENCAP")&&n?a.ports=`Ports are not allowed for ${e} protocols.`:n&&!A(n)&&(a.ports=C),a},Y=t=>t.map(r=>{const s=r.address,[n,e]=s.split("/");if(e)return r;try{const i=m.parse(n).kind()==="ipv4"?"/32":"/128",l=n+i;return{...r,address:l}}catch{return r}});export{u as P,z as a,X as b,K as c,B as d,Y as e,Q as f,$ as g,J as i,N as p,G as s,W as v};
